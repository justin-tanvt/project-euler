package net.projecteuler.problems;

public class P013 {
    // 100 * 50 digit numbers
    // maximum is 100 * {1000... x50}
    // so full maximum is {1000... x52} aka 1.000.. x 10^52 aka .999 x10^52

    // to get first 10 digits of 52 digit number
    // 9,999,999,999.xxx x10^42
    // add up first 12 digits

    public final static long[] NUMBERS_TO_ADD = {371072875339L,463769376774L,743249861995L,919422133635L,230675882075L,892616706966L,281128798128L,442742289174L,474514457360L,703864861058L,621764571418L,649063524627L,925758677183L,582035653253L,801811993848L,353986643728L,865155060062L,716938887077L,543700705768L,532826541087L,361232725250L,458765761724L,174237069058L,811426604180L,519343254517L,624672216484L,157324443869L,550376875256L,183363848253L,803862875928L,781828337579L,167263201004L,484030981290L,870869875513L,599594068957L,697939506796L,410526847082L,653786073615L,358290353174L,949537597651L,889028025717L,252676802760L,362702185404L,240744869082L,914302881971L,344130655780L,230530811728L,114876969321L,637832994906L,677201869716L,955482553002L,760853271322L,377742425354L,237019132757L,297988602722L,184957014548L,382982037830L,348295438291L,409579530664L,297461521855L,416981162220L,624679571944L,231897067725L,861880882258L,113067397083L,829591747671L,976233310448L,428462801835L,551216035469L,322381957343L,755061649651L,621778427521L,329241857071L,995186714302L,732674608005L,768418225246L,971426179103L,877836461827L,108488025216L,713296124747L,621840735723L,666278919814L,606618262936L,857869440895L,660243964099L,649139826800L,167309393198L,948093772450L,786391670211L,153687137119L,407899231155L,448899115014L,415031288803L,812348806732L,826165707739L,229188020587L,771585425020L,721078384350L,208496039801L,535035342264L};

    public static void main(String[] args) {
        long sum = 0;
        for (long num:NUMBERS_TO_ADD) {
            sum += num;
        }
        System.out.println(String.valueOf(sum).substring(0,10));
    }
}
